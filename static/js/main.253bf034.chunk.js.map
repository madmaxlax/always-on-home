{"version":3,"sources":["components/ScrollToTop.tsx","components/Link.tsx","components/Footer.tsx","components/RouteWithLayout.tsx","layouts/Empty/Empty.tsx","layouts/Main/components/Topbar.tsx","layouts/Main/Main.tsx","layouts/Minimal/Minimal.tsx","components/Card.tsx","components/CustomCircularProgress.tsx","components/GroceryList.tsx","components/NextSubway.tsx","components/TodaysWeather.tsx","pages/Home/index.tsx","pages/MainPage/index.tsx","pages/MinimalPage/index.tsx","pages/NotMadeYet/index.tsx","Routes.tsx","serviceWorker.ts","theme.tsx","index.tsx"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","isInternalURL","to","URL","location","origin","hostname","Link","props","disabled","Container","href","undefined","component","NavLink","useStyles","makeStyles","theme","footerRoot","footerContainer","minHeight","Footer","className","classes","Grid","container","direction","justifyContent","alignItems","clsx","item","Typography","variant","color","align","Date","getFullYear","RouteWithLayout","Layout","layout","Component","layoutprops","rest","render","matchProps","content","Empty","children","root","flexGrow","menuButton","marginRight","spacing","title","drawer","Topbar","useState","sidebarIsOpen","setSidebarIsOpen","AppBar","position","Toolbar","IconButton","edge","onClick","Button","Drawer","anchor","paper","onClose","open","paddingTop","Main","params","useParams","console","log","minimalRoot","main","leftSide","backgroundColor","palette","primary","Minimal","xs","cardRoot","card","height","fab","right","top","CardWidget","text","Icon","icon","action","actionIcon","sm","md","lg","Card","style","cursor","Fab","size","Refresh","CardContent","sx","verticalAlign","circularProgressRoot","CustomCircularProgress","Box","p","CircularProgress","groceryListRoot","knownEmojis","GroceryList","showAll","setShowAll","groceryData","setGroceryData","fetchTrelloGroceries","fetch","process","then","data","a","json","cards","filter","idList","closed","setTimeout","AddShoppingCart","length","map","index","hasFunEmoji","emoji","name","toLowerCase","includes","ShoppingBasket","fontSize","nextSubwayRoot","NextSubway","line","subway","listLimit","subwayData","setSubwayData","getSubwayData","response","reload","filterFunc","departure","routeId","displayFunc","deptTime","time","moment","fromNow","toLocaleTimeString","lineToUse","lines","currentLine","departures","N","S","convertKtoF","todaysWeatherRoot","kelvin","celsius","Math","floor","TodaysWeather","zip","weatherData","setWeatherData","fetchNewWeather","temp","feels_like","temp_max","temp_min","weather","description","Home","document","MainPage","JSON","stringify","MinimalPage","NotMadeYet","Routes","exact","path","push","search","encodeURIComponent","state","from","Boolean","match","createMuiTheme","purple","secondary","lightBlue","error","red","A400","components","MuiButton","variants","customValues","primaryFontFamily","secondaryFontFamily","customColor","ReactDOM","ThemeProvider","StyledEngineProvider","injectFirst","CssBaseline","basename","querySelector","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.253bf034.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import { Container } from '@material-ui/core';\nimport { default as MaterialUILink, LinkTypeMap } from '@material-ui/core/Link';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst isInternalURL = (to: string) => {\n  try {\n    const url = new URL(to, window.location.origin);\n    return url.hostname === window.location.hostname;\n  } catch {\n    return false;\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const Link = <D extends React.ElementType = LinkTypeMap['defaultComponent'], P = Record<string, unknown>>(\n  // trying to fix this type is needlessly difficult\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: any\n) => {\n  return props.disabled ? (\n    <Container {...props} />\n  ) : (\n    <MaterialUILink\n      {...props}\n      //internal vs external links\n      href={!isInternalURL(props.to) ? props.to : undefined}\n      component={isInternalURL(props.to) ? NavLink : 'a'}\n      to={isInternalURL(props.to) ? props.to : '/'}\n    />\n  );\n};\n","import { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { CustomTheme } from '../theme';\nimport { ClassNameProps } from '../utils/types';\nimport { Link } from './Link';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  footerRoot: {},\n  footerContainer: { minHeight: 100 },\n}));\n\nconst Footer = (props: ClassNameProps) => {\n  const { className } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"space-between\"\n      alignItems=\"stretch\"\n      className={clsx(classes.footerRoot, className)}\n    >\n      <Grid item container justifyContent=\"center\" alignItems=\"center\" className={classes.footerContainer}>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {'Copyright © '}\n          <Link color=\"inherit\" to=\"https://material-ui.com/\">\n            Your Website\n          </Link>{' '}\n          {new Date().getFullYear()}\n          {'.'}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Footer;\n","import React, { ElementType } from 'react';\nimport { Route, RouteComponentProps, RouteProps } from 'react-router-dom';\n\nexport interface RouteWithLayoutProps extends RouteProps {\n  layout: ElementType;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  layoutprops?: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nconst RouteWithLayout = (props: RouteWithLayoutProps) => {\n  const { layout: Layout, component: Component, layoutprops, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={(matchProps) => (\n        <Layout layoutprops={layoutprops}>\n          <Component {...matchProps} />\n        </Layout>\n      )}\n    />\n  );\n};\nexport default RouteWithLayout;\n","import { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { CustomTheme } from '../../theme';\nimport { LayoutProps } from '../../utils/types';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  content: {},\n}));\n\nconst Empty = (props: LayoutProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { children, layoutprops } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <main className={classes.content}>{children}</main>\n    </Container>\n  );\n};\n\nexport default Empty;\n","import { AppBar, Button, Drawer, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport { CustomTheme } from '../../../theme';\nimport { ClassNameProps } from '../../../utils/types';\n\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n  flexGrow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawer: {},\n}));\nconst Topbar = (props: ClassNameProps) => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false);\n\n  return (\n    <>\n      <AppBar {...rest} position=\"relative\" className={clsx(classes.root, className)}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            onClick={() => setSidebarIsOpen(!sidebarIsOpen)}\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title} component=\"div\">\n            App\n          </Typography>\n          <Button color=\"inherit\">Button</Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        anchor=\"left\"\n        classes={{ paper: classes.drawer }}\n        onClose={() => setSidebarIsOpen(false)}\n        open={sidebarIsOpen}\n        variant=\"temporary\"\n      >\n        <div className={clsx(classes.root, className)}>\n          <Button>Example link</Button>\n        </div>\n      </Drawer>\n    </>\n  );\n};\n\nexport default Topbar;\n","import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Footer } from '../../components';\nimport { CustomTheme } from '../../theme';\nimport { ClassNameChildrenProps } from '../../utils/types';\nimport Topbar from './components/Topbar';\n\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n  content: { paddingTop: theme.spacing(10) },\n}));\n\nconst Main = (props: ClassNameChildrenProps) => {\n  const { className, children, ...rest } = props;\n  const classes = useStyles();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const params = useParams() as any;\n  console.log(params);\n\n  return (\n    <div\n      className={clsx(\n        {\n          [classes.root]: true,\n        },\n        className\n      )}\n    >\n      <Topbar {...rest} />\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <main className={classes.content}>\n          {children}\n          <Footer />\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { Footer } from '../../components';\nimport { CustomTheme } from '../../theme';\nimport { LayoutProps } from '../../utils/types';\n\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  minimalRoot: {},\n  main: {\n    minHeight: '300px',\n  },\n  leftSide: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  content: {},\n}));\n\nconst Minimal = (props: LayoutProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { children, layoutprops } = props;\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.minimalRoot}\n      >\n        <Grid item container justifyContent=\"center\" alignItems=\"stretch\">\n          <Grid item container xs={12} justifyContent=\"center\" alignItems=\"stretch\" className={classes.main}>\n            <Grid item xs={6} justifyContent=\"center\" alignItems=\"center\" container className={classes.leftSide}>\n              <Typography variant=\"h2\">Appname</Typography>\n            </Grid>\n            <Grid item justifyContent=\"center\" alignItems=\"center\" container xs={6}>\n              <main className={classes.content}>{children}</main>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Footer />\n      </Grid>\n    </>\n  );\n};\n\nexport default Minimal;\n","import { Card, CardContent, Fab, Grid, SvgIconTypeMap, Typography } from '@material-ui/core';\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\nimport { Refresh } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport React, { ReactNode } from 'react';\nimport { CustomTheme } from '../theme';\nimport { ClassNameChildrenProps } from '../utils/types';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  cardRoot: {},\n  card: { height: '100%', position: 'relative' },\n  fab: { position: 'absolute', right: theme.spacing(1), top: theme.spacing(1) },\n}));\n\ninterface CardWidgetProps extends ClassNameChildrenProps {\n  text?: string;\n  title?: string;\n  onClick?: () => unknown;\n  action?: () => unknown;\n  actionIcon?: ReactNode;\n  icon?: OverridableComponent<SvgIconTypeMap<Record<string, unknown>, 'svg'>> & {\n    muiName: string;\n  };\n}\n\nexport const CardWidget = (props: CardWidgetProps) => {\n  const { className, text, icon: Icon, title, onClick, children, action, actionIcon } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} sm={6} md={4} lg={3} className={clsx(classes.cardRoot, className)}>\n      <Card classes={{ root: classes.card }} style={onClick != null ? { cursor: 'pointer' } : {}}>\n        {action != null && (\n          <Fab className={classes.fab} size=\"small\" color=\"primary\" onClick={action}>\n            {actionIcon ? actionIcon : <Refresh />}\n          </Fab>\n        )}\n        <CardContent onClick={onClick}>\n          {title && (\n            <Typography variant=\"h5\">\n              {Icon != null && <Icon color=\"primary\" size=\"sm\" sx={{ verticalAlign: 'middle' }} />}\n              {title}\n            </Typography>\n          )}\n          {text && <Typography>{text}</Typography>}\n          {children}\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n","import { Box, CircularProgress, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { CustomTheme } from '../theme';\nimport { ClassNameProps } from '../utils/types';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  circularProgressRoot: {},\n}));\n\ninterface GWCircularProgressProps extends ClassNameProps {\n  text?: string;\n}\n\nconst CustomCircularProgress = (props: GWCircularProgressProps) => {\n  const { text, className } = props;\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.circularProgressRoot, className)}>\n      {text ? (\n        <Box p={3}>\n          <Typography variant=\"h4\">{text}</Typography>\n        </Box>\n      ) : null}\n      <CircularProgress />\n    </Box>\n  );\n};\n\nexport default CustomCircularProgress;\n","import { Grid } from '@material-ui/core';\nimport { AddShoppingCart, ShoppingBasket } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\nimport { CustomTheme } from '../theme';\nimport { ClassNameProps } from '../utils/types';\nimport { CardWidget } from './Card';\nimport CustomCircularProgress from './CustomCircularProgress';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  groceryListRoot: {},\n}));\ninterface TrelloCard {\n  address: string;\n  attachments: Array<string>;\n  badges: string;\n  cardRole: string;\n  checkItemStates: string;\n  closed: boolean;\n  coordinates: string;\n  cover: string;\n  creationMethod: string;\n  customFieldItems: Array<string>;\n  dateLastActivity: string;\n  desc: string;\n  descData: string;\n  due: string;\n  dueComplete: string;\n  dueReminder: string;\n  id: string;\n  idAttachmentCover: string;\n  idBoard: string;\n  idChecklists: Array<string>;\n  idLabels: Array<string>;\n  idList: string;\n  idMembers: Array<string>;\n  idMembersVoted: Array<string>;\n  idShort: string;\n  isTemplate: string;\n  labels: Array<string>;\n  limits: string;\n  locationName: string;\n  manualCoverAttachment: string;\n  name: string;\n  pluginData: Array<string>;\n  pos: string;\n  shortLink: string;\n  shortUrl: string;\n  start: string;\n  subscribed: string;\n}\n\n//for full json response https://trello.com/b/FgrSihcE/groceries.json\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface TrelloResponse {\n  actions: Array<{ [name: string]: unknown }>;\n  cards: Array<TrelloCard>;\n  lists: Array<{\n    closed: string;\n    creationMethod: string;\n    id: string;\n    idBoard: string;\n    limits: string;\n    name: string;\n    pos: string;\n    softLimit: string;\n  }>;\n}\nconst knownEmojis = [\n  ['spinach', '🍃'],\n  ['bananas', '🍌'],\n  ['chicken', '🐓'],\n  ['eggs', '🍳🥚'],\n  ['avocado', '🥑'],\n  ['pizza', '🍕'],\n  ['bread', '🍞'],\n];\nconst listLimit = 9;\nexport const GroceryList = (props: ClassNameProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { className } = props;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const classes = useStyles();\n  const [showAll, setShowAll] = useState(false);\n  const [groceryData, setGroceryData] = useState<Array<TrelloCard>>([]);\n  const fetchTrelloGroceries = () => {\n    setGroceryData([]);\n    fetch(\n      `https://api.trello.com/1/lists/611ab9702b68a509a8047f4f/cards?key=${process.env.REACT_APP_TRELLO_API_KEY}&token=${process.env.REACT_APP_TRELLO_API_TOKEN}`\n    ).then(async (data) => {\n      const cards = (await data.json()) as Array<TrelloCard>;\n      setGroceryData(cards?.filter((card) => card.idList === '611ab9702b68a509a8047f4f' && !card.closed) || []);\n    });\n    setTimeout(fetchTrelloGroceries, 60 * 60 * 10000);\n  };\n  useEffect(() => {\n    fetchTrelloGroceries();\n  }, []);\n\n  return (\n    <CardWidget\n      title=\"Grocery List\"\n      onClick={() => {\n        setShowAll(!showAll);\n      }}\n      action={() => {\n        fetchTrelloGroceries();\n      }}\n      icon={AddShoppingCart}\n    >\n      {!groceryData?.length ? (\n        <CustomCircularProgress text=\"loading trello data\" />\n      ) : (\n        <>\n          {groceryData.length || 0} items\n          <br />\n          <Grid container spacing={1}>\n            {groceryData.map((card, index) => {\n              const hasFunEmoji = knownEmojis.filter((emoji) => card.name.toLowerCase().includes(emoji[0]));\n              console.log(hasFunEmoji);\n              return showAll || index < listLimit ? (\n                <Grid item xs={6} key={index}>\n                  {hasFunEmoji.length ? (\n                    hasFunEmoji[0][1]\n                  ) : (\n                    <ShoppingBasket fontSize=\"small\" color=\"secondary\" sx={{ verticalAlign: 'middle' }} />\n                  )}{' '}\n                  {card.name}\n                </Grid>\n              ) : index === listLimit ? (\n                <Grid item xs={6} key={index}>\n                  ...click to see all\n                </Grid>\n              ) : null;\n            })}\n          </Grid>\n        </>\n      )}\n    </CardWidget>\n  );\n};\n","import { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\nimport { CustomTheme } from '../theme';\nimport moment from 'moment';\nimport { ClassNameProps } from '../utils/types';\nimport { CardWidget } from './Card';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  nextSubwayRoot: {},\n}));\n\ninterface NextSubwayProps extends ClassNameProps {\n  location?: number;\n  line?: string;\n  subway?: string;\n  direction?: 'N' | 'S';\n  listLimit?: number;\n}\ninterface Departure {\n  destinationStationId: string;\n  routeId: string;\n  time: number;\n}\ninterface SubwayData {\n  complexId: number;\n  name: string;\n  lines: Array<{\n    name: string;\n    stationId: string;\n    departures: { N: Array<Departure>; S: Array<Departure> };\n  }>;\n}\n\nexport const NextSubway = (props: NextSubwayProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { className, location = 614, line = '8th Av - Fulton St', subway, direction } = props;\n  const listLimit = direction ? 6 : 3;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const classes = useStyles();\n  const [subwayData, setSubwayData] = useState<Partial<SubwayData>>({});\n\n  const getSubwayData = () => {\n    setSubwayData({});\n    fetch(`https://nice-chambray-wombat.glitch.me/departures/${location}`).then(async (response) =>\n      setSubwayData(await response.json())\n    );\n    setTimeout(() => {\n      window.location.reload();\n    }, 5 * 60 * 1000);\n  };\n  useEffect(() => {\n    getSubwayData();\n  }, []);\n  const filterFunc = (departure: Departure) => !subway || departure.routeId === subway;\n  const displayFunc = (departure: Departure, index: number) => {\n    const deptTime = new Date(departure.time * 1000);\n    // if (deptTime > curTime &&\n    if (index < listLimit) {\n      return (\n        <div key={index}>\n          <span className={'sub_icon _' + departure.routeId}>{departure.routeId}</span>: {moment(deptTime).fromNow()}:{' '}\n          {deptTime.toLocaleTimeString()}\n        </div>\n      );\n    }\n  };\n  const lineToUse = subwayData?.lines?.filter((currentLine) => currentLine.name === line)?.[0];\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const curTime = new Date();\n  return (\n    <CardWidget\n      onClick={getSubwayData}\n      title={`${subwayData.name || 'loading'} ${\n        direction === 'S' ? 'Southbound' : direction === 'N' ? 'Northbound' : ''\n      }`}\n    >\n      <>\n        {/* <Typography>From {subwayData.name}</Typography> */}\n        {direction ? (\n          lineToUse?.departures?.[direction]?.filter(filterFunc)?.map(displayFunc)\n        ) : (\n          <>\n            {' '}\n            <div>North:</div>\n            {lineToUse?.departures?.N?.filter(filterFunc)?.map(displayFunc)}\n            <div>South</div>\n            {lineToUse?.departures?.S?.filter(filterFunc)?.map(displayFunc)}\n          </>\n        )}\n      </>\n    </CardWidget>\n  );\n};\n","/* eslint-disable camelcase */\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\nimport { CustomTheme } from '../theme';\nimport { ClassNameProps } from '../utils/types';\nimport { CardWidget } from './Card';\nimport CustomCircularProgress from './CustomCircularProgress';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  todaysWeatherRoot: {},\n}));\nexport interface CurrentWeatherResponse {\n  base: string;\n  clouds: { [name: string]: string };\n  cod: number;\n  coord: { lat: number; long: number };\n  dt: number;\n  id: 0;\n  main: { temp: number; feels_like: number; humidity: number; pressure: number; temp_max: number; temp_min: number };\n  name: string;\n  sys: { type: number; id: number; country: string; sunrise: number; sunset: number };\n  weather: Array<{ id: number; main: string; description: string; icon: string }>;\n}\nconst convertKtoF = (kelvin?: number) => {\n  if (!kelvin) {\n    return 0;\n  }\n  const celsius = kelvin - 273;\n\n  // Calculating Fahrenheit temperature to the nearest integer\n  const fahrenheit = Math.floor(celsius * (9 / 5) + 32);\n  return fahrenheit;\n};\nexport const TodaysWeather = (props: ClassNameProps & { zip?: number }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { className, zip = 10019 } = props;\n  const [weatherData, setWeatherData] = useState<Partial<CurrentWeatherResponse>>({});\n  const fetchNewWeather = () => {\n    setWeatherData({});\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?zip=${zip},${'us'}&appid=${\n        process.env.REACT_APP_OPEN_WEATHER_API_KEY\n      }`\n    ).then(async (data) => {\n      setWeatherData(await data.json());\n    });\n    setTimeout(fetchNewWeather, 60 * 60 * 1000);\n  };\n  useEffect(() => {\n    fetchNewWeather();\n  }, []);\n  return (\n    <CardWidget onClick={fetchNewWeather} title={`Weather for ${weatherData.name || ''}`}>\n      <>\n        {!weatherData?.main ? (\n          <CustomCircularProgress text={'Loading Weather'} />\n        ) : (\n          <>\n            Current: {convertKtoF(weatherData?.main?.temp)}&deg;\n            {weatherData?.main?.temp !== weatherData?.main?.feels_like && (\n              <span>\n                ,{'  '}Feels like: {convertKtoF(weatherData?.main?.feels_like)}&deg;\n              </span>\n            )}\n            <br />\n            High: {convertKtoF(weatherData?.main?.temp_max)}&deg;\n            <br />\n            Low: {convertKtoF(weatherData?.main?.temp_min)}&deg;\n            <br />\n            {weatherData?.weather?.[0]?.main}: {weatherData?.weather?.[0]?.description}\n          </>\n        )}\n      </>\n    </CardWidget>\n  );\n};\n","import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect } from 'react';\nimport { CardWidget } from '../../components/Card';\nimport { GroceryList } from '../../components/GroceryList';\nimport { NextSubway } from '../../components/NextSubway';\nimport { TodaysWeather } from '../../components/TodaysWeather';\nimport { CustomTheme } from '../../theme';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n}));\n\nexport const Home = () => {\n  useEffect(() => {\n    setTimeout(() => {\n      window.location.reload();\n    }, 2 * 60 * 60 * 1000);\n  }, []);\n  document.title = 'Always On Home App';\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const classes = useStyles();\n  // const params = useParams();\n  return (\n    <Grid container spacing={1} justifyContent=\"space-evenly\" alignItems=\"stretch\">\n      {/* <NextSubway />   */}\n      <GroceryList />\n      <TodaysWeather />\n      <NextSubway subway=\"A\" direction=\"N\" />\n      <NextSubway location={162} />\n      <NextSubway location={316} line=\"Broadway - 7Av\" />\n      <TodaysWeather zip={33704} />\n      <CardWidget text={'hello3'} />\n      <CardWidget text={'hello4'} />\n      <CardWidget text={'hello5'} />\n      <CardWidget text={'hello6'} />\n      <CardWidget text={'hello7'} />\n    </Grid>\n  );\n};\n","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from '../../components';\nimport { CustomTheme } from '../../theme';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n}));\n\nexport const MainPage = () => {\n  const classes = useStyles();\n  const params = useParams();\n  return (\n    <div className={classes.root}>\n      <h1>Main Page!</h1>\n      <Link to=\"/\">Back to minimal page</Link>\n      <pre>{JSON.stringify(params)}</pre>\n    </div>\n  );\n};\n","import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from '../../components';\nimport { CustomTheme } from '../../theme';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n}));\n\nexport const MinimalPage = () => {\n  const classes = useStyles();\n  const params = useParams();\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>\n        <div className={classes.root}>\n          <h1>First Page!</h1>\n          <Link to=\"/main/page-name\">Route: main page</Link>\n          <br />\n          <Link to=\"/doesntexist\">Route: page that doesnt exist</Link>\n          <br />\n\n          <pre>{JSON.stringify(params)}</pre>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n","import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from '../../components';\nimport { CustomTheme } from '../../theme';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  root: {},\n}));\n\nexport const NotMadeYet = () => {\n  const classes = useStyles();\n  const params = useParams();\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>\n        <h1>Page Not Found!</h1>\n        <br />\n\n        <Link to=\"/\">Back Home</Link>\n        <br />\n\n        <pre>{JSON.stringify(params)}</pre>\n      </Grid>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport { RouteWithLayout } from './components';\nimport Empty from './layouts/Empty/Empty';\nimport Main from './layouts/Main/Main';\nimport Minimal from './layouts/Minimal/Minimal';\nimport { Home } from './pages/Home';\nimport { MainPage } from './pages/MainPage';\nimport { MinimalPage } from './pages/MinimalPage';\nimport { NotMadeYet } from './pages/NotMadeYet';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <RouteWithLayout component={Home} exact layout={Empty} layoutprops={{}} path={['/']} />\n      <RouteWithLayout component={MinimalPage} exact layout={Minimal} layoutprops={{}} path={['/oldmain']} />\n\n      <RouteWithLayout component={MainPage} exact layout={Main} path=\"/main/:pageName\" />\n      <RouteWithLayout component={NotMadeYet} exact layout={Minimal} layoutprops={{}} path=\"/404-not-found\" />\n      <Redirect\n        push\n        to={{\n          pathname: '/404-not-found',\n          search: '?from=' + encodeURIComponent(window.location.href),\n          state: { from: window.location.href },\n        }}\n      />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.warn('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { purple, red, lightBlue } from '@material-ui/core/colors';\nimport { createMuiTheme, Theme } from '@material-ui/core/styles';\n\n// A custom theme for this app\n// default theme options:\n// https://next.material-ui.com/customization/default-theme/\n//Add custom params to theme for regular re-use\nexport interface CustomTheme extends Theme {\n  customValues: {\n    primaryFontFamily: string;\n    secondaryFontFamily: string;\n    customColor: string;\n  };\n}\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[800],\n    },\n    secondary: {\n      main: lightBlue[200],\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n  components: {\n    MuiButton: {\n      //custom variants\n      variants: [\n        {\n          // note: Material UI v5 is still working on this, so it doesn't work as of Feb 2021\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          props: { variant: 'custom' as any },\n          style: {\n            backgroundColor: '#00acee',\n            color: '#FFFFFF',\n            '&:hover': {\n              backgroundColor: '#007cad',\n            },\n          },\n        },\n      ],\n    },\n  },\n}) as CustomTheme;\n\ntheme.customValues = {\n  primaryFontFamily: 'Roboto',\n  secondaryFontFamily: 'Arial',\n  customColor: 'green',\n};\n\nexport default theme;\n","import 'react-app-polyfill/stable';\nimport 'whatwg-fetch';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { StyledEngineProvider, ThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './assets/css/index.css';\nimport ScrollToTop from './components/ScrollToTop';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <StyledEngineProvider injectFirst>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <Router basename={process.env.PUBLIC_URL || '/'}>\n        <ScrollToTop />\n        <Routes />\n      </Router>\n    </StyledEngineProvider>\n  </ThemeProvider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}